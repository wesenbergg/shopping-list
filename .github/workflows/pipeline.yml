name: Deployment Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]
    types: [opened, synchronize]

jobs:
  build_deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v4
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 build-essential
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install && cd ui && pnpm install && cd ..
      - name: Rebuild better-sqlite3
        run: cd node_modules/better-sqlite3 && pnpm rebuild
      - name: lint
        run: pnpm run lint
      - name: build
        run: pnpm run build

      - name: test
        run: cd ui && pnpm run test && cd ..
      - name: Install Cypress binary
        run: pnpm exec cypress install
      - name: e2e tests
        uses: cypress-io/github-action@v6
        with:
          command: pnpm run cypress:run
          start: pnpm run dev:all
          wait-on: http://localhost:5173
          headed: false

  render_deploy:
    needs: build_deploy
    name: Render Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: "write"
      id-token: "write"
    steps:
      - name: Trigger Render Deployment
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && !contains(github.event.pull_request.labels.*.name, 'skip deployment') }}
        run: |
          curl -f -X POST https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_SERVICE_KEY }}

  tag_release:
    needs: build_deploy
    name: Tag Release
    runs-on: ubuntu-latest
    permissions:
      contents: "write"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.73.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: minor

  discord_notification:
    needs: [build_deploy, tag_release]
    name: Discord Notification
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send Success Deployment Notification
        if: ${{ success() && github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{
            "embeds": [{
              "title": "Deployment Successful",
              "description": "The deployment pipeline has completed successfully.",
              "color": 65280,
              "fields": [
                {
                  "name": "Repository",
                  "value": "${{ github.repository }}",
                  "inline": true
                }
              ],
              "footer": {
                "text": "Deployed by ${{ github.actor }}"
              }
            }]
          }' \
          ${{ secrets.DISCORD_WEBHOOK }}

      - name: Send Success PR Notification
        if: ${{ success() && github.event_name == 'pull_request' }}
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{
            "embeds": [{
              "title": "All Checks Passed",
              "description": "The pull request #${{ github.event.pull_request.number }} has passed all checks.",
              "color": 65280,
              "fields": [
                {
                  "name": "Repository",
                  "value": "${{ github.repository }}",
                  "inline": true
                }
              ],
              "footer": {
                "text": "Deployed by ${{ github.actor }}"
              }
            }]
          }' \
          ${{ secrets.DISCORD_WEBHOOK }}

      - name: Send Suspended Notification
        if: cancelled()
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{
            "embeds": [{
              "title": "Pipeline Suspended",
              "description": "The deployment pipeline has been suspended.",
                "color": 3447003,
              "fields": [
                {
                  "name": "Repository",
                  "value": "${{ github.repository }}",
                  "inline": true
                }
              ],
              "footer": {
                "text": "Deployed by ${{ github.actor }}"
              }
            }]
          }' \
          ${{ secrets.DISCORD_WEBHOOK }}

      - name: Send Failure Notification
        if: failure()
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{
            "embeds": [{
              "title": "Pipeline Failed on Deployment",
              "description": "The deployment pipeline has failed.",
              "color": 15158332,
              "fields": [
                {
                  "name": "Repository",
                  "value": "${{ github.repository }}",
                  "inline": true
                }
              ],
              "footer": {
                "text": "Deployed by ${{ github.actor }}"
              }
            }]
          }' \
          ${{ secrets.DISCORD_WEBHOOK }}
